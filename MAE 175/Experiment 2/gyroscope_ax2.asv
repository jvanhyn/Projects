clear 
close all
load("week2data.mat");
clc

%% DATA
snip = 68;
S = (ax21(1:snip,:) + ax22(1:snip,:) + ax23(1:snip,:) + ax24(1:snip,:) + ax25(1:snip,:))./5;
u = S(:,3);
y1 = S(:,4);
t1 = S(:,2);
dy1 = diff(S(:,4));
dt1 = t1(1:end-1);

clear ax21 ax22 ax23 ax24 ax25 S snip 

%% Figure 1
figure(1)
sgtitle("LAB DATA - AX2", "FontName","Cambria")

subplot(3,1,1)
plot(t1,u,"LineWidth",2)
grid on
grid minor
title('Input')


subplot(3,1,2)
hold on
plot(t1,y1,"LineWidth",2)
grid on
grid minor
title("Position")

ylim([0 600])


subplot(3,1,3)
plot(dt1,dy1,"LineWidth",2)
grid on
grid minor
title("Velocity")

%% Predictions
%y1 = y1-75*t1;
S = stepinfo(y1,t1,"RiseTimeThreshhold",[0 1],'SettlingTimeThreshold',0.15);
RT = S.RiseTime;
ST = S.SettlingTime;
yss = y1(cast(ST/mean(diff(t1)),'uint32')+3);

[pks,locs] = findpeaks(y1,t1);
wd = 2*pi*(length(pks)-1)/(locs(end)-locs(1));
bwn = 1/(locs(end-1)-locs(1))*log((pks(1)-yss)/(pks(end)-yss));

wn = sqrt(wd^2+bwn^2);
z2 = bwn/wn;
K = yss;

%%% Prediction Plot
% 
% figure(1)
% subplot(3,1,2)
% hold on 
% subplot(3,1,2)
% xline(ST)
% xline(RT)
% hold off

%% Verification 
ts = linspace(0,3,1000);                       % Simulation Time
dtu = 3;                                  % Dwell Time 
Ustp = @(x) ((x > 0) - 0*(x>dtu));          % Step function
us = (Ustp(ts) - Ustp(ts-dtu));             % Simulation Input

Khw = 9.7656e-02;                         % Hardware Gain


G22 = tf(K*wn^2,[1 2*z2*wn wn^2]);      % Transfer function from Voltage to Position


y2 = lsim(G22, us, ts);                    %  Simluated position using LinSim
t2 = ts;   

dy2 = diff(y2)*1/9.7656e-02;                          % Velocity
dt2 = t2(1:end-1);

%% Figure 2
figure(2)
sgtitle("SYM DATA - AX2 PREDICTION", "FontName","Cambria")

subplot(3,1,1)
plot(t2,us,"LineWidth",2)
grid on
grid minor
title('Input')
subplot(3,1,2)
plot(t2,y2,"LineWidth",2)
xlim([0 3])
grid on
grid minor
title("Position")
subplot(3,1,3)
plot(dt2,dy2,"LineWidth",2)
grid on
grid minor
title("Velocity")

%% Figure 3

figure(3)
sgtitle("LAB DATA - AX2", "FontName","Cambria")

subplot(3,1,1)
plot(t1,u,"LineWidth",2)
grid on
grid minor
title('Input')


subplot(3,1,2)
hold on
plot(t1,y1,"LineWidth",2)
grid on
grid minor
title("Position")
ylim([0 600])

subplot(3,1,3)
hold on
plot(dt1,dy1,"LineWidth",2)
grid on
grid minor
title("Velocity")

subplot(3,1,1)
plot(t2,us,"LineWidth",2)
grid on
grid minor
title('Input')
subplot(3,1,2)
plot(t2,y2,"LineWidth",2)
xlim([0 3])
grid on
grid minor
title("Position")
subplot(3,1,3)
plot(dt2,dy2,"LineWidth",2)
grid on
grid minor
title("Velocity")
%% Controller Design 
Ku = 1
Tu;
Kp = 0.6*Ku;
Ki = 1.2*Ku/Tu;
Kd = 0.075*Ku*Tu;

P = tf(K,1);
I = tf(Ki,[1 0]);
D = tf(Kd*[1 0],1);

D3 = 1/Khw*(P+D+I);
GD = G22*D3;

H = GD/(1+GD);

[Gm,Pm,Wcg,Wcp] = margin(GD);
[mag,phase,wout] = bode(GD,{0,5000});
S = stepinfo(H,'RiseTimeLimits',[0 1]);

figure()
s = step(H);
plot(s)
% eta = Pm/100;
% RT = S.RiseTime;
% MP = S.Overshoot
% close
% figure(4)
% title('Locus and Resulting Pole Placement')
% hold on
% rlocus(GD)
% plot(pole(H),'x')
% hold off
%% Phase Margin 
figure(5)
margin(D3)
xlim([1 10e5])
figure(6)
margin(G22)
xlim([1 10e5])
figure(7)
margin(GD)
xlim([1 10e5])
%% Verification 
uz = sin(ts);
y1 = lsim(H*tf([0 0 1],1), us, ts);             % simluated position
dy1 = lsim(H*tf([0 1 0],1), us, ts);             % simluated velocity

%% Figure 8
figure(8)
sgtitle("SYM DATA - AX2 PID", "FontName","Cambria")

subplot(3,1,1)
plot(ts,us,"LineWidth",2)
grid on
grid minor
title('Input')
xlim([0 6]);

subplot(3,1,2)
plot(ts,y1,"LineWidth",2)
grid on
grid minor
title("Position")
xlim([0 6]);

subplot(3,1,3)
plot(ts,dy1,"LineWidth",2)
grid on
grid minor
title("Velocity")
xlim([0 6]);

